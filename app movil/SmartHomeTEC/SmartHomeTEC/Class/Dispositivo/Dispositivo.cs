using System;
using System.Collections.Generic;

using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using SmartHomeTEC.Class.Dispositivo;
//
//    var dispositivo = Dispositivo.FromJson(jsonString);

namespace SmartHomeTEC.Class.Dispositivo
{


    public partial class Dispositivo
    {
        [JsonProperty("Dispositivo")]
        public List<DispositivoElement> DispositivoDispositivo { get; set; }
    }

    public partial class DispositivoElement
    {
        [JsonProperty("Descripcion")]
        public string Descripcion { get; set; }

        [JsonProperty("TipoDispositivo")]
        public string TipoDispositivo { get; set; }

        [JsonProperty("Marca")]
        public string Marca { get; set; }

        [JsonProperty("Serie")]
        public string Serie { get; set; }

        [JsonProperty("Consumo")]
        public string Consumo { get; set; }

        [JsonProperty("Aposento")]
        public string Aposento { get; set; }

        [JsonProperty("Garantia")]
        public string Garantia { get; set; }

        [JsonProperty("Estado")]
        public string Estado { get; set; }
    }

    public partial class Dispositivo
    {
        public static Dispositivo FromJson(string json) => JsonConvert.DeserializeObject<Dispositivo>(json, SmartHomeTEC.Class.Dispositivo.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Dispositivo self) => JsonConvert.SerializeObject(self, SmartHomeTEC.Class.Dispositivo.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
